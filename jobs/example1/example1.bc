; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target triple = "x86_64-pc-linux-gnu"

declare i8* @malloc(i64)

declare void @free(i8*)

declare void @verifier_error()

declare i8 @nd_bv8()

define void @main() !dbg !3 {
  %1 = call i8 @nd_bv8(), !dbg !7
  br label %2, !dbg !9

2:                                                ; preds = %15, %0
  %3 = phi i8 [ %6, %15 ], [ %1, %0 ]
  %4 = phi i8 [ %5, %15 ], [ 1, %0 ]
  %5 = add i8 %4, 1, !dbg !10
  %6 = mul i8 %3, %4, !dbg !11
  %7 = icmp eq i8 %4, -1, !dbg !12
  %8 = xor i1 %7, true, !dbg !13
  br i1 %8, label %9, label %16, !dbg !14

9:                                                ; preds = %2
  %10 = lshr i8 %3, 0, !dbg !15
  %11 = trunc i8 %10 to i1, !dbg !16
  %12 = icmp ugt i8 %4, 3, !dbg !17
  %13 = and i1 %12, %11, !dbg !18
  %14 = xor i1 %13, true, !dbg !19
  br i1 %14, label %15, label %17, !dbg !20

15:                                               ; preds = %9
  br label %2, !dbg !21

16:                                               ; preds = %2
  call void @verifier_error(), !dbg !22
  unreachable, !dbg !23

17:                                               ; preds = %9
  call void @verifier_error(), !dbg !24
  unreachable, !dbg !25
}

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!2}

!0 = distinct !DICompileUnit(language: DW_LANG_C, file: !1, producer: "mlir", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug)
!1 = !DIFile(filename: "LLVMDialectModule", directory: "/")
!2 = !{i32 2, !"Debug Info Version", i32 3}
!3 = distinct !DISubprogram(name: "main", linkageName: "main", scope: null, file: !4, line: 4, type: !5, scopeLine: 4, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !6)
!4 = !DIFile(filename: "factorial4even.btor2.mlir.opt.llvm", directory: "/Users/jetafese/Documents/code/btor2mlir-1/test/Btor")
!5 = !DISubroutineType(types: !6)
!6 = !{}
!7 = !DILocation(line: 6, column: 10, scope: !8)
!8 = !DILexicalBlockFile(scope: !3, file: !4, discriminator: 0)
!9 = !DILocation(line: 7, column: 5, scope: !8)
!10 = !DILocation(line: 10, column: 10, scope: !8)
!11 = !DILocation(line: 11, column: 10, scope: !8)
!12 = !DILocation(line: 13, column: 10, scope: !8)
!13 = !DILocation(line: 15, column: 11, scope: !8)
!14 = !DILocation(line: 16, column: 5, scope: !8)
!15 = !DILocation(line: 20, column: 11, scope: !8)
!16 = !DILocation(line: 21, column: 11, scope: !8)
!17 = !DILocation(line: 23, column: 11, scope: !8)
!18 = !DILocation(line: 24, column: 11, scope: !8)
!19 = !DILocation(line: 26, column: 11, scope: !8)
!20 = !DILocation(line: 27, column: 5, scope: !8)
!21 = !DILocation(line: 29, column: 5, scope: !8)
!22 = !DILocation(line: 31, column: 5, scope: !8)
!23 = !DILocation(line: 32, column: 5, scope: !8)
!24 = !DILocation(line: 34, column: 5, scope: !8)
!25 = !DILocation(line: 35, column: 5, scope: !8)